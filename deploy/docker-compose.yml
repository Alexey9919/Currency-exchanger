version: '2.1'

services:
  eureka-discovery-service:
    image: eureka-discovery-service
    container_name: compose-eureka-discovery-service
    ports:
      - "8761:8761"
    networks:
      zagrebin:
        aliases:
          - "eureka"


  currency-rate-service-1:
    image: currency-rate-service
    container_name: compose-currency-rate-service-1
    depends_on:
      - eureka-discovery-service
    environment:
      EUREKA_HOST: eureka
    ports:
      - "8086:8085"
    networks:
      zagrebin:
        aliases:
          - "currency-rate-service-1"


  currency-rate-service-2:
    image: currency-rate-service
    container_name: compose-currency-rate-service-2
    depends_on:
      - eureka-discovery-service
    environment:
      EUREKA_HOST: eureka
    ports:
      - "8087:8085"
    networks:
      zagrebin:
        aliases:
          - "currency-rate-service-2"

  gateway-service:
    image: gateway-service
    container_name: compose-gateway-service
    depends_on:
      - eureka-discovery-service
    environment:
        EUREKA_HOST: eureka
        CURRENCY_URL: lb://currency-rate-service
    ports:
        - "8080:8080"
    networks:
      zagrebin:
        aliases:
          - "gateway"


  auth-service:
    image: auth-service
    container_name: compose-auth-service
    depends_on:
      - eureka-discovery-service
    environment:
      EUREKA_HOST: eureka
      ZIPKIN_HOST: zipkin
      LOGSTASH_HOST: logstash
    ports:
      - "9000:9000"
    networks:
      zagrebin:
        aliases:
          - "auth-service"


  postgres:
    image: postgres:13.3
    container_name: compose-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: masterkey
    ports:
      - "8075:5432"
    volumes:
      - "/srv/db/postgres:/var/lib/postgresql/data:rw"
    networks:
      zagrebin:
        aliases:
          - "postgres"


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: compose-zookeeper
    ports:
      - "2181:2181"
    networks:
      zagrebin:
        aliases:
          - "zookeeper"


  kafka:
    image: wurstmeister/kafka
    container_name: compose-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_POST=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=account-events:4:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      zagrebin:
        aliases:
          - "kafka"


  exchange-processing-service:
    image: exchange-processing-service
    container_name: compose-exchange-processing-service
    depends_on:
      - eureka-discovery-service
      - auth-service
      - postgres
      - kafka
    environment:
      EUREKA_HOST: eureka
      ZIPKIN_HOST: zipkin
      LOGSTASH_HOST: logstash
      DB_HOST: postgres
      KAFKA_HOST: kafka
      CURRENCY_URL: "http://gateway:8080"
      AUTH_TOKEN_URL: "http://auth-service:9000/oauth/check_token"
      USER_INFO_URL: "http://auth-service:9000/user"
    ports:
      - "8090:8090"
    networks:
      zagrebin:
        aliases:
          - "exchange-processing-service"


  account-history-service:
    image: account-history-service
    container_name: compose-account-history-service
    depends_on:
      - eureka-discovery-service
      - auth-service
      - postgres
      - kafka
    environment:
      EUREKA_HOST: eureka
      DB_HOST: postgres
      KAFKA_HOST: kafka
      AUTH_TOKEN_URL: "http://auth-service:9000/oauth/check_token"
      USER_INFO_URL: "http://auth-service:9000/user"
    ports:
      - "8010:8010"
    networks:
      zagrebin:
        aliases:
          - "account-history-service"


  zipkin:
    image: openzipkin/zipkin
    container_name: compose-zipkin
    ports:
      - "9411:9411"
    networks:
      zagrebin:
        aliases:
          - "zipkin"


  elasticsearch:
    image: elasticsearch:8.3.3
    container_name: compose-elasticsearch
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xmx32m -Xmx128m"
    volumes:
      - 'C:\Users\HUAWEI\Desktop\db\elastic:/usr/share/elasticsearch/data'
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      zagrebin:
        aliases:
          - "elasticsearch"


  logstash:
    image: logstash:8.3.3
    container_name: compose-logstash
    depends_on:
      - elasticsearch
    volumes:
      - 'C:\Users\HUAWEI\Desktop\currency-exchanger-backend-app\currency-exchanger-backend-app\deploy\conf\pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro'
      - 'C:\Users\HUAWEI\Desktop\currency-exchanger-backend-app\currency-exchanger-backend-app\deploy\conf:/usr/share/logstash/config/pipelines:ro'
    ports:
      - "5000:5000"
    networks:
      zagrebin:
        aliases:
          - "logstash"


  kibana:
    image: kibana:8.3.3
    container_name: compose-kibana
    depends_on:
      - elasticsearch
    environment:
      - "xpack.security.enabled=false"
      - "ELASTICSEARCH_URL=http://elasticsearch:9300"
    ports:
      - "5601:5601"
    networks:
      zagrebin:
        aliases:
          - "kibana"


  prometheus:
    image: prom/prometheus
    container_name: compose-prometheus
    volumes:
      - 'C:\Users\HUAWEI\Desktop\currency-exchanger-backend-app\currency-exchanger-backend-app\deploy\prometheus\prometheus.yml:/etc/prometheus/prometheus.yml:ro'
    ports:
      - "9090:9090"
    networks:
      zagrebin:
        aliases:
          - "prometheus"


  grafana:
    image: grafana/grafana
    container_name: compose-grafana
    depends_on:
      - prometheus
    environment:
      - "GF_SECURITY_ADMIN_USER: admin"
      - "GF_SECURITY_ADMIN_PASSWORD: password"
    ports:
      - "3030:3000"
    networks:
      zagrebin:
        aliases:
          - "grafana"

networks:
  zagrebin:
    driver: bridge


